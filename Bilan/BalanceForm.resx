<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>